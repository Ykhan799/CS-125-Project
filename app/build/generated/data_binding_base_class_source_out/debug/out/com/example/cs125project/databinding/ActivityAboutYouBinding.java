// Generated by view binder compiler. Do not edit!
package com.example.cs125project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cs125project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAboutYouBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText age;

  @NonNull
  public final CheckBox buildingMuscle;

  @NonNull
  public final CheckBox gainingWeight;

  @NonNull
  public final EditText height;

  @NonNull
  public final CheckBox increaseFlexible;

  @NonNull
  public final CheckBox losingWeight;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final EditText weight;

  private ActivityAboutYouBinding(@NonNull RelativeLayout rootView, @NonNull EditText age,
      @NonNull CheckBox buildingMuscle, @NonNull CheckBox gainingWeight, @NonNull EditText height,
      @NonNull CheckBox increaseFlexible, @NonNull CheckBox losingWeight,
      @NonNull Button saveButton, @NonNull EditText weight) {
    this.rootView = rootView;
    this.age = age;
    this.buildingMuscle = buildingMuscle;
    this.gainingWeight = gainingWeight;
    this.height = height;
    this.increaseFlexible = increaseFlexible;
    this.losingWeight = losingWeight;
    this.saveButton = saveButton;
    this.weight = weight;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAboutYouBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAboutYouBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_about_you, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAboutYouBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.age;
      EditText age = ViewBindings.findChildViewById(rootView, id);
      if (age == null) {
        break missingId;
      }

      id = R.id.buildingMuscle;
      CheckBox buildingMuscle = ViewBindings.findChildViewById(rootView, id);
      if (buildingMuscle == null) {
        break missingId;
      }

      id = R.id.gainingWeight;
      CheckBox gainingWeight = ViewBindings.findChildViewById(rootView, id);
      if (gainingWeight == null) {
        break missingId;
      }

      id = R.id.height;
      EditText height = ViewBindings.findChildViewById(rootView, id);
      if (height == null) {
        break missingId;
      }

      id = R.id.increaseFlexible;
      CheckBox increaseFlexible = ViewBindings.findChildViewById(rootView, id);
      if (increaseFlexible == null) {
        break missingId;
      }

      id = R.id.losingWeight;
      CheckBox losingWeight = ViewBindings.findChildViewById(rootView, id);
      if (losingWeight == null) {
        break missingId;
      }

      id = R.id.saveButton;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.weight;
      EditText weight = ViewBindings.findChildViewById(rootView, id);
      if (weight == null) {
        break missingId;
      }

      return new ActivityAboutYouBinding((RelativeLayout) rootView, age, buildingMuscle,
          gainingWeight, height, increaseFlexible, losingWeight, saveButton, weight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
