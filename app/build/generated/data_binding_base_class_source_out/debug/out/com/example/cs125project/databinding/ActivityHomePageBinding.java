// Generated by view binder compiler. Do not edit!
package com.example.cs125project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cs125project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomePageBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button continueButton;

  @NonNull
  public final Button customizeButton;

  @NonNull
  public final ProgressBar determinateBar;

  @NonNull
  public final Button editInfoButton;

  @NonNull
  public final Button logoutButton;

  private ActivityHomePageBinding(@NonNull RelativeLayout rootView, @NonNull Button continueButton,
      @NonNull Button customizeButton, @NonNull ProgressBar determinateBar,
      @NonNull Button editInfoButton, @NonNull Button logoutButton) {
    this.rootView = rootView;
    this.continueButton = continueButton;
    this.customizeButton = customizeButton;
    this.determinateBar = determinateBar;
    this.editInfoButton = editInfoButton;
    this.logoutButton = logoutButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomePageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomePageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomePageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.continueButton;
      Button continueButton = ViewBindings.findChildViewById(rootView, id);
      if (continueButton == null) {
        break missingId;
      }

      id = R.id.customizeButton;
      Button customizeButton = ViewBindings.findChildViewById(rootView, id);
      if (customizeButton == null) {
        break missingId;
      }

      id = R.id.determinateBar;
      ProgressBar determinateBar = ViewBindings.findChildViewById(rootView, id);
      if (determinateBar == null) {
        break missingId;
      }

      id = R.id.editInfoButton;
      Button editInfoButton = ViewBindings.findChildViewById(rootView, id);
      if (editInfoButton == null) {
        break missingId;
      }

      id = R.id.logoutButton;
      Button logoutButton = ViewBindings.findChildViewById(rootView, id);
      if (logoutButton == null) {
        break missingId;
      }

      return new ActivityHomePageBinding((RelativeLayout) rootView, continueButton, customizeButton,
          determinateBar, editInfoButton, logoutButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
